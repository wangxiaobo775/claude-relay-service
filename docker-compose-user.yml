version: '3.8'

# Claude Relay Service - 用户部署配置（带请求历史记录功能）
# 直接使用预构建的 Docker 镜像，无需本地构建

services:
  # 🚀 Claude Relay Service
  claude-relay:
    image: wangxiaobo775/claude-relay-service:latest
    restart: unless-stopped
    ports:
      # 主服务端口（可修改左侧端口号，如 8080:3000）
      - "${BIND_HOST:-0.0.0.0}:${PORT:-3000}:3000"
    volumes:
      # 持久化日志、数据
      - ./logs:/app/logs
      - ./data:/app/data
    environment:
      # 🌐 服务器配置
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0

      # 🔐 安全配置（必填！请务必修改）
      # 生成方法: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
      - JWT_SECRET=${JWT_SECRET}  # 必填：至少32字符的随机字符串
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}  # 必填：32字符的加密密钥
      - ADMIN_SESSION_TIMEOUT=${ADMIN_SESSION_TIMEOUT:-86400000}
      - API_KEY_PREFIX=${API_KEY_PREFIX:-cr_}

      # 👤 管理员凭据（首次启动自动创建）
      - ADMIN_USERNAME=${ADMIN_USERNAME:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123456}

      # 📊 Redis 配置（连接到下方的 Redis 服务）
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=${REDIS_DB:-0}
      - REDIS_ENABLE_TLS=${REDIS_ENABLE_TLS:-}

      # 🎯 Claude API 配置
      - CLAUDE_API_URL=${CLAUDE_API_URL:-https://api.anthropic.com/v1/messages}
      - CLAUDE_API_VERSION=${CLAUDE_API_VERSION:-2023-06-01}
      - CLAUDE_BETA_HEADER=${CLAUDE_BETA_HEADER:-claude-code-20250219,oauth-2025-04-20,interleaved-thinking-2025-05-14,fine-grained-tool-streaming-2025-05-14}

      # 🌐 代理配置（如需使用代理，请取消注释并填写）
      # - HTTP_PROXY=http://proxy-server:port
      # - HTTPS_PROXY=http://proxy-server:port
      - DEFAULT_PROXY_TIMEOUT=${DEFAULT_PROXY_TIMEOUT:-60000}
      - MAX_PROXY_RETRIES=${MAX_PROXY_RETRIES:-3}

      # 📈 使用限制
      - DEFAULT_TOKEN_LIMIT=${DEFAULT_TOKEN_LIMIT:-1000000}

      # 📝 日志配置
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_MAX_SIZE=${LOG_MAX_SIZE:-10m}
      - LOG_MAX_FILES=${LOG_MAX_FILES:-5}

      # 🔧 系统配置
      - CLEANUP_INTERVAL=${CLEANUP_INTERVAL:-3600000}
      - TOKEN_USAGE_RETENTION=${TOKEN_USAGE_RETENTION:-2592000000}
      - HEALTH_CHECK_INTERVAL=${HEALTH_CHECK_INTERVAL:-60000}
      - TIMEZONE_OFFSET=${TIMEZONE_OFFSET:-8}

      # 🎨 Web 界面配置
      - WEB_TITLE=${WEB_TITLE:-Claude Relay Service}
      - WEB_DESCRIPTION=${WEB_DESCRIPTION:-Multi-account Claude API relay service with request history}

      # 🛠️ 功能开关
      - DEBUG=${DEBUG:-false}
      - ENABLE_CORS=${ENABLE_CORS:-true}
      - TRUST_PROXY=${TRUST_PROXY:-true}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - claude-relay-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # 📊 Redis Database
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    expose:
      - "6379"
    volumes:
      # Redis 数据持久化
      - ./redis_data:/data
    command: >
      redis-server
      --save 60 1
      --appendonly yes
      --appendfsync everysec
      --maxmemory 2gb
      --maxmemory-policy allkeys-lru
    networks:
      - claude-relay-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  claude-relay-network:
    driver: bridge

# 💡 使用说明:
# 1. 复制 .env.example 为 .env 并配置必要的环境变量（JWT_SECRET 和 ENCRYPTION_KEY）
# 2. 运行: docker compose -f docker-compose-user.yml up -d
# 3. 访问: http://localhost:3000/web
# 4. 默认管理员: admin / admin123456
#
# 🆕 请求历史记录功能:
# - GET /api/v1/request-history - 查询请求历史
# - GET /api/v1/request-history/:id - 查看单个请求详情
# - GET /api/v1/request-stats - 获取请求统计
#
# 📖 详细文档: https://github.com/wangxiaobo775/claude-relay-service
